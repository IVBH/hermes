{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/admin/whitelist": {
            "post": {
                "description": "This endpoint allows an admin to add or remove applications from the whitelist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Manages the whitelist of approved applications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin Key for authentication",
                        "name": "admin_key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Whitelist Update Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Whitelist updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "This endpoint checks if Hermes and Redis are running properly",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Checks the health status of Hermes API",
                "responses": {
                    "200": {
                        "description": "System is healthy",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Redis is unreachable",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/protected": {
            "get": {
                "description": "This middleware validates the API key for incoming requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Middleware for API Key Validation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key for authentication",
                        "name": "api_key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Valid API Key",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/publish": {
            "post": {
                "description": "Publish a message to a specific Redis channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messaging"
                ],
                "summary": "Publish a message",
                "parameters": [
                    {
                        "description": "Publish request payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.PublishRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.PublishResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "This endpoint registers an application for pub/sub",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Registers a new app",
                "parameters": [
                    {
                        "description": "App Registration Data",
                        "name": "app",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/renew": {
            "post": {
                "description": "This endpoint renews an expired API key for an application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Renews an API key",
                "parameters": [
                    {
                        "description": "API Key Renewal Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New API key issued successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid API key",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/subscribe": {
            "post": {
                "description": "Subscribe to a Redis channel and receive messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messaging"
                ],
                "summary": "Subscribe to a channel",
                "parameters": [
                    {
                        "description": "Subscribe request payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscribeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscribeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Error description",
                    "type": "string"
                }
            }
        },
        "handlers.PublishRequest": {
            "type": "object",
            "required": [
                "channel",
                "message"
            ],
            "properties": {
                "channel": {
                    "description": "Channel to publish the message",
                    "type": "string"
                },
                "message": {
                    "description": "The message content",
                    "type": "string"
                }
            }
        },
        "handlers.PublishResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Confirmation message",
                    "type": "string"
                }
            }
        },
        "handlers.SubscribeRequest": {
            "type": "object",
            "required": [
                "channel"
            ],
            "properties": {
                "channel": {
                    "description": "Channel to subscribe to",
                    "type": "string"
                }
            }
        },
        "handlers.SubscribeResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "List of received messages",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}